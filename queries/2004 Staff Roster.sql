create temporary table ta (SELECT c1.contact_id, a.address_id, at.rank, min( at.rank )  AS min_a_rankFROM contacts AS c1LEFT  JOIN address_associations AS aa ON aa.contact_id = c1.contact_idLEFT  JOIN addresses AS a ON a.address_id = aa.address_idLEFT  JOIN address_types AS at ON at.address_type_id = a.address_type_idGROUP  BY aa.address_association_idHAVING at.rank = min_a_rankorder by at.rank asc);create temporary table te (SELECT c2.contact_id, e.email_id, et.rank, min( et.rank )  AS min_e_rankFROM contacts AS c2LEFT  JOIN email_associations AS ea ON ea.contact_id = c2.contact_idLEFT  JOIN emails AS e ON e.email_id = ea.email_idLEFT  JOIN email_types AS et ON et.email_type_id = e.email_type_idGROUP  BY ea.email_association_idHAVING et.rank = min_e_rankorder by et.rank asc);create temporary table tp (SELECT c3.contact_id, p.phone_id, pt.rank, min( pt.rank )  AS min_p_rankFROM contacts AS c3LEFT  JOIN phone_associations AS pa ON pa.contact_id = c3.contact_idLEFT  JOIN phones AS p ON p.phone_id = pa.phone_idLEFT  JOIN phone_types AS pt ON pt.phone_type_id = p.phone_type_idGROUP  BY pa.phone_association_idHAVING pt.rank = min_p_rankorder by pt.rank asc);SELECT  c.contact_id, primary_name, first_name, nickname, short_name, role, street_address_1, street_address_2, city, state, postal_code, country, number, email FROM contacts AS cJOIN roster_memberships AS m ON m.contact_id = c.contact_idJOIN rosters AS r ON r.roster_id = m.roster_idJOIN groups AS g ON g.group_id = r.group_idleft JOIN roles AS l ON l.role_id = m.role_idLEFT  JOIN ta ON c.contact_id = ta.contact_idleft join addresses as a on a.address_id = ta.address_idLEFT  JOIN tp ON c.contact_id = tp.contact_idleft join phones as p on p.phone_id = tp.phone_idLEFT  JOIN te ON c.contact_id = te.contact_idleft join emails as e on e.email_id = te.email_idWHERE year = 2004 AND (is_staff = 1 or short_name = 'Intern')group by c.contact_idorder by primary_name asc, first_name asc;